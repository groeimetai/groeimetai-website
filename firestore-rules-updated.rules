rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isValidContactSubmission(data) {
      return data.keys().hasAll(['name', 'email', 'company', 'submittedAt', 'status']) &&
             data.name is string && data.name.size() > 0 &&
             data.email is string && data.email.matches('.*@.*\\..*') &&
             data.status == 'new' &&
             data.source == 'website_contact_form';
    }
    
    function isValidEmailData(data) {
      return data.keys().hasAll(['to', 'message']) &&
             data.to is string && data.to.matches('.*@.*\\..*') &&
             data.message is map &&
             data.message.keys().hasAll(['subject', 'html']);
    }
    
    // Contact submissions - allow public write with validation
    match /contact_submissions/{document} {
      allow create: if isValidContactSubmission(request.resource.data);
      allow read, update, delete: if isAuthenticated() && isAdmin();
    }

    // Mail collection - allow public write for email system  
    match /mail/{document} {
      allow create: if isValidEmailData(request.resource.data);
      allow read, update: if isAuthenticated() && isAdmin();
    }
    
    // Agent Assessments collection - RELAXED PERMISSIONS
    match /agent_assessments/{assessmentId} {
      // Allow read for own data OR if authenticated user
      allow read: if (
        resource.data.userId == request.auth.uid ||
        resource.data.email == request.auth.token.email ||
        isAuthenticated()
      );
      
      // Anyone can create agent assessments (guest users via email)
      allow create: if true;
      
      // Users can update their own assessments
      allow update: if (
        resource.data.userId == request.auth.uid ||
        resource.data.email == request.auth.token.email ||
        isAuthenticated()
      );
      
      // Only admins can delete agent assessments
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Expert Assessments collection - RELAXED PERMISSIONS  
    match /expert_assessments/{assessmentId} {
      // Allow read for own data OR if authenticated user
      allow read: if (
        resource.data.userId == request.auth.uid ||
        resource.data.email == request.auth.token.email ||
        isAuthenticated()
      );
      
      // Authenticated users can create expert assessments
      allow create: if isAuthenticated();
      
      // Users can update their own assessments
      allow update: if (
        resource.data.userId == request.auth.uid ||
        resource.data.email == request.auth.token.email ||
        isAuthenticated()
      );
      
      // Only admins can delete expert assessments
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own profile or admin profiles (for messaging)
      allow read: if isOwner(userId) || isAuthenticated();
      
      // Users can create their own profile during registration
      allow create: if isOwner(userId);
      
      // Users can update their own profile
      allow update: if isOwner(userId) || isAuthenticated();
      
      // Only admins can delete user profiles
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Quotes collection
    match /quotes/{quoteId} {
      // Anyone can create a quote (including guests)
      allow create: if true;
      
      // Users can read their own quotes, admins can read all
      allow read: if isAuthenticated() && (
                    (resource.data.userId == request.auth.uid) || 
                    (resource.data.email == request.auth.token.email) ||
                    isAdmin()
                    );
      
      // Users can update their own quotes, admins can update all
      allow update: if isAuthenticated() && (
                      (resource.data.userId == request.auth.uid) || 
                      isAdmin()
                      );
      
      // Only admins can delete quotes
      allow delete: if isAuthenticated() && isAdmin();
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update: if false;
        allow delete: if false;
      }
    }
    
    // Projects collection
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Consultations collection
    match /consultations/{consultationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Documents collection
    match /documents/{documentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Meetings collection
    match /meetings/{meetingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // UserSettings collection
    match /userSettings/{userId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
    
    // Assessments collection
    match /assessments/{assessmentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Scheduled Emails collection (for follow-up automation)
    match /scheduled_emails/{emailId} {
      // System can create scheduled emails
      allow create: if true;
      // System can update email status (sent, failed, etc.)
      allow update: if true;
      // Admins can read scheduled emails
      allow read: if isAuthenticated() && isAdmin();
      // Only admins can delete scheduled emails
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Project Timelines collection
    match /projectTimelines/{quoteId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Support Chats collection
    match /supportChats/{chatId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update: if false;
        allow delete: if false;
      }
    }
    
    // Project Chats collection
    match /projectChats/{chatId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update: if false;
        allow delete: if false;
      }
    }
    
    // General Chats collection
    match /chats/{chatId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && isAdmin();
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update: if false;
        allow delete: if false;
      }
    }
    
    // Activity Logs collection
    match /activityLogs/{logId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if false;
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Invoices collection
    match /invoices/{invoiceId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isAdmin();
      allow update: if isAuthenticated() && isAdmin();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Catch-all rule - deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}